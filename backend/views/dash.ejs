<!DOCTYPE html>
<html>

<head>
    <title>Dashboard</title>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?display=swap&family=Inter:wght@400;500;700;900&family=Noto+Sans:wght@400;500;700;900" />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: Inter, "Noto Sans", sans-serif;
        }

        .dashboard-card:hover {
            border-color: #2094f3;
            transition: border-color 0.3s ease;
        }
    </style>
</head>

<body class="bg-[#f0f2f5]">
    <!-- Navigation -->
    <nav class="bg-white border-b border-[#f0f2f5] px-10 py-3">
        <div class="flex items-center justify-between">
            <div class="flex items-center gap-4">
                <div class="size-4">
                    <svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd"
                            d="M24 4H42V17.3333V30.6667H24V44H6V30.6667V17.3333H24V4Z" fill="#111518"></path>
                    </svg>
                </div>
                <h2 class="text-[#111518] text-lg font-bold leading-tight tracking-[-0.015em]">VidTranscribe</h2>
            </div>
            <div class="flex items-center gap-6">
                <div class="flex items-center gap-3">
                    <span class="text-[#111518] font-medium">
                        <%=data.name%>
                    </span>
                    <a href="/logout"><img src="<%=data.picture%>""
                        style=" height: 40px; width: 40px; border-radius: 50%;">
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="p-10">
        <!-- Credits and Profile Section -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
            <div class="dashboard-card bg-white p-6 rounded-xl border border-[#dbe1e6]">
                <h3 class="text-lg font-bold text-[#111518] mb-4">Available Credits</h3>
                <div class="flex items-end gap-3">
                    <span class="text-3xl font-bold text-[#2094f3]">
                        <%=user.creditsLeft%>
                    </span>
                    <span class="text-[#60778a] mb-1">credits remaining</span>
                </div>
                <button onclick="showUpgradeModal()" class="mt-4 text-[#2094f3] text-sm font-medium hover:underline">
                    Get more credits →
                </button>
            </div>

            <div class="dashboard-card bg-white p-6 rounded-xl border border-[#dbe1e6]">
                <div class="flex flex-col items-center">
                    <div class="size-32 rounded-full bg-[#2094f3] flex items-center justify-center mb-4">
                        <img src="<%=data.picture%>""
                        style=" height: 125px; width: 125px; border-radius: 50%;">
                    </div>
                    <h3 class="text-xl font-bold text-[#111518]">
                        <%=data.name%>
                    </h3>
                    <p class="text-[#60778a]">
                        <%=data.email%>
                    </p>
                </div>
            </div>
        </div>

        <!-- Search and New Transcription -->
        <div class="flex justify-between items-center mb-8">
            <!-- <div class="relative w-96">
                <input type="text" 
                       placeholder="Search transcripts..." 
                       class="w-full px-4 py-3 rounded-xl border border-[#dbe1e6] focus:border-[#2094f3] focus:outline-none pl-10"
                />
                <div class="absolute left-3 top-1/2 transform -translate-y-1/2 text-[#60778a]">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                </div>
            </div> -->
            <button onclick="startNewTranscription()"
                class="bg-[#2094f3] text-white px-6 py-3 rounded-xl font-bold text-sm tracking-[0.015em] hover:bg-[#1884e3] transition-colors">
                New Transcription
            </button>
        </div>

        <!-- Transcriptions Table -->
        <div class="dashboard-card bg-white rounded-xl border border-[#dbe1e6] overflow-hidden">
            <h3 class="text-lg font-bold text-[#111518] p-6 border-b border-[#f0f2f5]">Recent Transcriptions</h3>
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-[#f0f2f5]">
                        <tr>
                            <th class="text-left text-sm font-medium text-[#60778a] px-6 py-3 w-1/4">Date & Time</th>
                            <th class="text-left text-sm font-medium text-[#60778a] px-6 py-3">Transcript</th>
                            <th class="text-left text-sm font-medium text-[#60778a] px-6 py-3">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% user.responses.forEach((x)=> { %>
                            <tr class="border-b border-[#f0f2f5]">
                                <td class="px-6 py-4 text-[#60778a] w-1/4">
                                    <%= `${x.date.toLocaleDateString('en-US', { weekday: 'long' , day: 'numeric' ,
                                        month: 'numeric' , year: 'numeric' })} : ${x.date.toLocaleTimeString('en-US', {
                                        hour: '2-digit' , minute: '2-digit' , hour12: true })}` %>
                                </td>
                                <td class="px-6 py-4">
                                    <%= x.transcript.length> 50 ? x.transcript.slice(0, 50) + "..." : x.transcript %>
                                </td>
                                <td class="px-6 py-4">
                                    <form action="/ask" method="POST">
                                        <input type="hidden" name="transcript" value="<%= x.transcript %>" />
                                        <button type="submit"
                                            class="bg-blue-500 text-white px-4 py-2 rounded">Ask</button>
                                    </form>
                                </td>
                            </tr>
                            <% }) %>
                    </tbody>
                </table>


            </div>
        </div>
    </div>

    <!-- Upgrade Plan Modal -->
    <div id="upgradeModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center">
        <form class="bg-white rounded-xl p-8 max-w-md w-full mx-4 akshat">
            <h2 class="text-2xl font-bold text-[#111518] mb-6">Upgrade Plan</h2>
            <div class="space-y-4">
                <label
                    class="p-4 border border-[#dbe1e6] rounded-xl hover:border-[#2094f3] cursor-pointer flex items-center justify-between">
                    <div>
                        <h3 class="font-bold text-[#111518]">Basic</h3>
                        <p class="text-[#60778a]">10 Credits</p>
                    </div>
                    <span class="font-bold text-[#111518]">₹100</span>
                    <input type="radio" name="plan" value="basic" class="ml-4 accent-[#2094f3]" />
                </label>
                <label class="p-4 border border-[#2094f3] rounded-xl bg-blue-50 flex items-center justify-between">
                    <div>
                        <h3 class="font-bold text-[#111518]">Standard</h3>
                        <p class="text-[#60778a]">20 Credits</p>
                    </div>
                    <span class="font-bold text-[#111518]">₹160</span>
                    <input type="radio" name="plan" value="standard" class="ml-4 accent-[#2094f3]" checked />
                </label>
                <label
                    class="p-4 border border-[#dbe1e6] rounded-xl hover:border-[#2094f3] cursor-pointer flex items-center justify-between">
                    <div>
                        <h3 class="font-bold text-[#111518]">Pro</h3>
                        <p class="text-[#60778a]">30 Credits</p>
                    </div>
                    <span class="font-bold text-[#111518]">₹210</span>
                    <input type="radio" name="plan" value="pro" class="ml-4 accent-[#2094f3]" />
                </label>
            </div>
            <button type="submit"
                class="w-full bg-[#2094f3]  text-white py-3 rounded-xl font-bold text-sm tracking-[0.015em] hover:bg-[#1884e3] transition-colors mt-6">
                Upgrade Plan
            </button>

            <button type="button" onclick="hideUpgradeModal()"
                class="w-full text-[#60778a] text-sm hover:text-[#111518] mt-4">
                Cancel
            </button>
        </form>
    </div>
    <% let opt=options %>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>

        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script>

            $(document).ready(function () {
                $('.akshat').submit(function (e) {
                    e.preventDefault();

                    var formData = $(this).serialize();

                    $.ajax({
                        url: "/payment",
                        type: "POST",
                        data: formData,
                        success: function (res) {
                            if (res.success) {
                                console.log(res);

                                var options = {
                                    "key": "" + res.key + "",
                                    "amount": "" + res.amount + "",
                                    "currency": "INR",
                                    "name": "" + res.name + "",
                                    "description": "" + res.description + "",
                                    "image": "https://lh3.googleusercontent.com/a/AGNmyxYVPmzybxNWLF3EU5ELKmkFYKJqbAp0mpA28GSAaA=s200-c",
                                    "order_id": "" + res.order_id + "",
                                    "handler": function (response) {
                                        const data = {
                                            orderCreationId: res.order_id,
                                            razorpayPaymentId: response.razorpay_payment_id,
                                            razorpayOrderId: response.razorpay_order_id,
                                            razorpaySignature: response.razorpay_signature,
                                            credit: res.credit, email: res.prefill.email
                                        };

                                        $.ajax({
                                            url: "/payment/success", type: "POST", data:data
                                        });
                                        // alert("Payment Succeeded");
                                        setTimeout(function () {
                                            window.location.reload(true);

                                        }, 2000);






                                        // window.open("/","_self")
                                    },
                                    "prefill": {
                                        "contact": "" + res.prefill.contact + "",
                                        "name": "" + res.email + "",
                                        "email": "" + res.email + ""
                                    },
                                    "notes": {
                                        "description": "" + res.description + ""
                                    },
                                    "theme": {
                                        "color": "#2300a3"
                                    }
                                };
                                var razorpayObject = new Razorpay(options);
                                razorpayObject.on('payment.failed', function (response) {
                                    alert("Payment Failed");
                                });
                                razorpayObject.open();
                            }
                            else {
                                alert(res.msg);
                            }
                        }
                    })

                });
            });

        </script>
        <script>
            function showUpgradeModal() {
                document.getElementById('upgradeModal').classList.remove('hidden');
            }

            function hideUpgradeModal() {
                document.getElementById('upgradeModal').classList.add('hidden');
            }

            function upgradePlan() {
                // Handle plan upgrade
                hideUpgradeModal();
            }

            function startNewTranscription() {
                // Handle new transcription
                window.location.href = '/';
            }

            // Close modal when clicking outside
            document.getElementById('upgradeModal').addEventListener('click', function (e) {
                if (e.target === this) {
                    hideUpgradeModal();
                }
            });
            // async function showPaymentModal(plan) {
            //     console.log(plan);

            //     try {
            //         // Step 1: Create the payment request on the backend
            //         const response = await fetch('http://localhost:5000/payment', {
            //             method: 'POST',
            //             headers: {
            //                 'Content-Type': 'application/json',
            //             },
            //             body: JSON.stringify({ plan: plan }),
            //         });

            //         if (!response.ok) {
            //             throw new Error('Failed to create payment');
            //         }

            //         // Step 2: Get the Razorpay payment options from the backend
            //         const options = await response.json();
            //         const razorpay = new Razorpay(options); // Initialize Razorpay

            //         // Step 3: Payment failure handler
            //         razorpay.on('payment.failed', function (response) {
            //             alert('Payment failed. Please try again.');
            //             console.error(response.error);
            //         });

            //         // Open the Razorpay modal
            //         razorpay.open();

            //         // Step 4: Calculate credits based on the plan
            //         let credit = 20;  // Default credit for 'premium' plan
            //         if (plan === "basic") {
            //             credit = 10; // Credits for basic plan
            //         } else if (plan === "standard") {
            //             credit = 20; // Credits for standard plan
            //         } else if (plan === "premium") {
            //             credit = 30; // Credits for premium plan
            //         }

            //         // Prepare the data for the backend (after payment success)
            //         const data = {
            //             emailId: options.email, // Assuming the email is part of the response
            //             credit: credit,         // Credits to be added based on plan
            //         };

            //         console.log(data);

            //         // Step 5: Send payment success data to the backend
            //         const resp = await fetch('/payment/success', {
            //             method: 'POST',
            //             headers: {
            //                 'Content-Type': 'application/json',
            //             },
            //             body: JSON.stringify(data),
            //         });

            //         const successResponse = await resp.json();
            //         console.log(successResponse); // Log the backend's response after payment success

            //     } catch (error) {
            //         console.error(error);
            //         alert('An error occurred while processing the payment.');
            //     }
            // }

            // Trigger payment modal from the upgrade modal button
            // document.querySelectorAll('input[name="plan"]').forEach((radio) => {
            //     radio.addEventListener('change', () => {
            //         const selectedPlan = radio.value;
            //         showPaymentModal(selectedPlan);
            //     });
            // });

        </script>
</body>

</html>